---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import PageHeader from "@/partials/PageHeader1.astro";
import { type CollectionEntry } from "astro:content";
import DynamicIcon from "@/helpers/DynamicIcon";
import { getEntry } from "astro:content";
import { markdownify } from "@/lib/utils/textConverter";
import bgImageMod from "@/lib/utils/bgImageMod";
import Testimonial from "@/partials/Testimonial.astro";
import config from "@/config/config.json";

interface Props {
  products: CollectionEntry<"products">;
}

interface Props {
  class?: string;
  content: TestimonialType;
}
const COLLECTION_FOLDER = "products";
export async function getStaticPaths() {
  const COLLECTION_FOLDER = "products";
  const productssCollection = await getSinglePage(COLLECTION_FOLDER);

  const paths = productssCollection.map((products) => ({
    params: {
      single: products.slug,
    },
    props: { products },
  }));
  return paths;
}
import type { TestimonialType } from "@/types";

const testimonialContent = (await getEntry("sections", "testimonial"))
  .data as TestimonialType;

interface Card {
  bg_img: string;
  title: string;
  icon: string;
  content: string;
}

const { products } = Astro.props;
const {
  body,
  render,
  data: {
    title,
    feature,
    button,
    meta_title,
    meta_description,
    description,
    bg_image,
    image,
    features_image1,
    testimonial,
    list,
    clients_logo_slider,
    about,
    banner_slider,
    banner_slider1,
    banner_slider2,
    banner_slider3,
    banner_slider4,
    banner_slider5,
    offgrid,
  },
} = products;

const { Content } = await render();
const productssCollection = await getSinglePage(COLLECTION_FOLDER);
const aboutBgImage = await bgImageMod(about?.bg_image!);
const { contact_form_action }: { contact_form_action: string } = config.params;
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  meta_description={meta_description}
  image={image}
>
  <PageHeader
    title={title}
    description={description}
    bg_image={bg_image}
    button={button}
  />

  {
    clients_logo_slider?.enable && (
      <section
        class="bg-white dark:bg-[#07031E] section"
        style="padding-bottom: 0 !important;"
      >
        <div class="container">
          <h2 class="text-center dark:text-white   text-2xl md:text-4xl ">
            Trust and recognition from clients
          </h2>
          <div class="client-logo-slider swiper self-center">
            <div class="swiper-wrapper lg:justify-center justify-left items-center">
              {clients_logo_slider.clientLogos &&
                clients_logo_slider.clientLogos.map((item) => {
                  if (!item?.logo) return null;

                  const { logo, link } = item;

                  return (
                    <div class="swiper-slide">
                      {link || link === "#?" ? (
                        <a
                          href={link}
                          target="_blank"
                          class="text-center block outline-0 py-3 px-2"
                        >
                          <ImageMod
                            src={logo}
                            width={140}
                            height={50}
                            alt="client-logo"
                          />
                        </a>
                      ) : (
                        <span class="text-center block outline-0 py-3 px-2">
                          <ImageMod
                            src={logo}
                            width={140}
                            height={50}
                            alt="client-logo"
                          />
                        </span>
                      )}
                    </div>
                  );
                })}
            </div>
          </div>
        </div>
      </section>
    )
  }

  {
    about?.enable && (
      <section class="section  bg-white dark:bg-[#07031E]">
        <div class="container overlay-content">
          <div class="row bg-slate-600 rounded-md md:p-8 py-8 px-3">
            <h2
              class="text-center  text-white text-2xl md:text-4xl pb-5"
              set:text={title}
            />
            <div class="md:col-7 grid place-content-center">
              {about.bulletPoint && (
                <ul class=" space-y-2 mb-6">
                  {about.bulletPoint.map((point: string) => (
                    <li
                      style="font-size: 16px;"
                      class="text-white "
                      set:html={markdownify(point)}
                    >
                      <DynamicIcon
                        className="inline-block text-primary me-2"
                        icon="TfiArrowCircleRight"
                      />
                    </li>
                  ))}
                </ul>
              )}
            </div>
            <div class="md:col-5">
              <ImageMod
                src={about.bg_image}
                class="rounded-md"
                alt="client-logo"
              />
            </div>
          </div>
        </div>
      </section>
    )
  }
  {
    banner_slider?.enable && (
      <section class="md:py-8 py-4  bg-white dark:bg-[#07031E] ">
        <h2
          set:text={feature}
          class="text-center dark:text-white text-black text-2xl md:text-4xl pb-8"
        />
        <div class="container overlay-content">
          <div class="row">
            <div class="md:col-6">
              <ImageMod
                src={banner_slider.bg_image}
                width={900}
                height={500}
                class="h-full object-cover rounded-md"
                alt="products"
              />
            </div>
            <div class="md:col-6 grid place-content-center ">
              <h3
                class="text-start dark:text-white text-black text-2xl py-4"
                set:text={banner_slider.title}
              />
              <p
                set:text={banner_slider.content}
                class="pb-4 dark:text-white "
              />
              {banner_slider.bulletPoint && (
                <ul class=" space-y-2 m-0 md:mb-6">
                  {banner_slider.bulletPoint.map((point: string) => (
                    <li
                      class="text-black dark:text-white "
                      set:html={markdownify(point)}
                    >
                      <DynamicIcon
                        className="inline-block text-primary me-2"
                        icon="TfiArrowCircleRight"
                      />
                    </li>
                  ))}
                </ul>
              )}
            </div>
          </div>
        </div>
      </section>
    )
  }

  {
    banner_slider1?.enable && (
      <section class="md:py-8 p-0  bg-white dark:bg-[#07031E] ">
        <div class="container overlay-content">
          <div class="row">
            <div class="md:col-6 grid place-content-center">
              <h3
                class="text-start dark:text-white text-black text-2xl pb-4"
                set:text={banner_slider1.title}
              />
              <p
                set:text={banner_slider1.content}
                class="pb-4 dark:text-white "
              />
              {banner_slider1.bulletPoint && (
                <ul class=" space-y-2 mb-6">
                  {banner_slider1.bulletPoint.map((point: string) => (
                    <li
                      class="text-black dark:text-white "
                      set:html={markdownify(point)}
                    >
                      <DynamicIcon
                        className="inline-block text-primary me-2"
                        icon="TfiArrowCircleRight"
                      />
                    </li>
                  ))}
                </ul>
              )}
            </div>
            <div class="md:col-6">
              <ImageMod
                src={banner_slider1.bg_image}
                width={900}
                height={500}
                class="h-full object-cover rounded-md"
                alt="products"
              />
            </div>
          </div>
        </div>
      </section>
    )
  }

  {
    banner_slider2?.enable && (
      <section class="py-8  bg-white dark:bg-[#07031E] ">
        <div class="container overlay-content">
          <div class="row md:flex-row  flex-col-reverse">
            <div class="md:col-6">
              <ImageMod
                src={banner_slider2.bg_image}
                width={900}
                height={500}
                class="h-full object-cover rounded-md"
                alt="products"
              />
            </div>
            <div class="md:col-6 grid place-content-center">
              <h3
                class="text-start dark:text-white text-black text-2xl py-4"
                set:text={banner_slider2.title}
              />
              <p
                set:text={banner_slider2.content}
                class="pb-4 dark:text-white "
              />
              {banner_slider2.bulletPoint && (
                <ul class=" space-y-2 mb-6">
                  {banner_slider2.bulletPoint.map((point: string) => (
                    <li
                      class="text-black dark:text-white "
                      set:html={markdownify(point)}
                    >
                      <DynamicIcon
                        className="inline-block text-primary me-2"
                        icon="TfiArrowCircleRight"
                      />
                    </li>
                  ))}
                </ul>
              )}
            </div>
          </div>
        </div>
      </section>
    )
  }

  {
    banner_slider3?.enable && (
      <section class="md:py-8 p-0  bg-white dark:bg-[#07031E] ">
        <div class="container overlay-content">
          <div class="row">
            <div class="md:col-6 grid place-content-center">
              <h3
                class="text-start dark:text-white text-black text-2xl pb-4"
                set:text={banner_slider3.title}
              />
              <p
                set:text={banner_slider3.content}
                class="pb-4 dark:text-white "
              />
              {banner_slider3.bulletPoint && (
                <ul class=" space-y-2 mb-6">
                  {banner_slider3.bulletPoint.map((point: string) => (
                    <li
                      class="text-black dark:text-white "
                      set:html={markdownify(point)}
                    >
                      <DynamicIcon
                        className="inline-block text-primary me-2"
                        icon="TfiArrowCircleRight"
                      />
                    </li>
                  ))}
                </ul>
              )}
            </div>
            <div class="md:col-6">
              <ImageMod
                src={banner_slider3.bg_image}
                width={900}
                height={500}
                class="h-full object-cover rounded-md"
                alt="products"
              />
            </div>
          </div>
        </div>
      </section>
    )
  }

  {
    banner_slider4?.enable && (
      <section class="py-8  bg-white dark:bg-[#07031E] ">
        <div class="container overlay-content">
          <div class="row md:flex-row  flex-col-reverse">
            <div class="md:col-6">
              <ImageMod
                src={banner_slider4.bg_image}
                width={900}
                height={500}
                class="h-full object-cover rounded-md"
                alt="products"
              />
            </div>
            <div class="md:col-6 grid place-content-center">
              <h3
                class="text-start dark:text-white text-black text-2xl py-4"
                set:text={banner_slider4.title}
              />
              <p
                set:text={banner_slider4.content}
                class="pb-4 dark:text-white "
              />
              {banner_slider4.bulletPoint && (
                <ul class=" space-y-2 mb-6">
                  {banner_slider4.bulletPoint.map((point: string) => (
                    <li
                      class="text-black dark:text-white "
                      set:html={markdownify(point)}
                    >
                      <DynamicIcon
                        className="inline-block text-primary me-2"
                        icon="TfiArrowCircleRight"
                      />
                    </li>
                  ))}
                </ul>
              )}
            </div>
          </div>
        </div>
      </section>
    )
  }

  <section class="bg-white dark:bg-[#07031E]">
    <div class="container">
      <div class="row gy-4">
        <article class="lg:col-12 lg:order-2 order-1">
         
          {
            body && (
              <div class="content">
                <Content />
              </div>
            )
          }
        </article>
      </div>
    </div>

    {
      offgrid?.enable && (
        <section class="py-8  bg-white dark:bg-[#07031E] ">
          <h2
            class="text-center dark:text-white text-black text-2xl md:text-4xl py-5"
            set:text={offgrid.title}
          />
          <div class="container overlay-content">
            <div class="row ">
              {offgrid.card.map((card: Card) => (
                <div class="md:col-6 gap-2 mb-8 mx-auto">
                  <div
                    class="rounded-md before:rounded-md p-10 relative bg-no-repeat bg-cover before:absolute before:inset-0 before:bg-slate-950/50"
                    style={{ backgroundImage: `url(${card.bg_img})` }}
                  >
                    <DynamicIcon
                      className="inline-block relative mb-4 size-10 text-white me-2"
                      icon={card.icon}
                    />
                    <h3 class="text-white text-2xl relative">{card.title}</h3>
                    <p class="text-white relative">{card.content}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )
    }

    {testimonial?.enable && <Testimonial content={testimonialContent} />}

    <section class="section bg-white dark:bg-[#07031E]">
      <div class="container">
        <div class="row">
          <div class="lg:col-5 md:col-5 grid place-content-center">
            <h2 class="h2 mb-8 dark:text-white" set:html="Contact Us" />

            <ul
              class="pl-0"
              data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
              data-astro-source-loc="42:32"
            >
              <li
                class="flex mb-8 dark:text-white"
                data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                data-astro-source-loc="47:43"
              >
                <span
                  class="mr-4 TfiMobile h-[50px] xl:h-[70px] min-w-[50px] max-w-[50px] xl:min-w-[70px] xl:max-w-[70px] border border-border text-center leading-[50px] xl:leading-[70px] text-2xl xl:text-2xl text-primary inline-block rounded-full border-solid"
                  data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                  data-astro-source-loc="51:247"
                >
                  <span
                    class="sr-only"
                    data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                    data-astro-source-loc="52:26">mobile</span
                  >
                  <svg
                    stroke="currentColor"
                    fill="currentColor"
                    stroke-width="0"
                    version="1.1"
                    viewBox="0 0 17 17"
                    class="inline-block"
                    height="1em"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                    ><g></g><path
                      d="M12.5 0h-8c-0.827 0-1.5 0.673-1.5 1.5v14c0 0.827 0.673 1.5 1.5 1.5h8c0.827 0 1.5-0.673 1.5-1.5v-14c0-0.827-0.673-1.5-1.5-1.5zM4.5 1h8c0.276 0 0.5 0.224 0.5 0.5v1.5h-9v-1.5c0-0.276 0.224-0.5 0.5-0.5zM13 4v8h-9v-8h9zM12.5 16h-8c-0.276 0-0.5-0.224-0.5-0.5v-2.5h9v2.5c0 0.276-0.224 0.5-0.5 0.5zM9 14.5c0 0.276-0.224 0.5-0.5 0.5s-0.5-0.224-0.5-0.5 0.224-0.5 0.5-0.5 0.5 0.224 0.5 0.5z"
                    ></path></svg
                  >
                </span>
                <div
                  class="self-center font-primary"
                  data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                  data-astro-source-loc="55:61"
                >
                  <div
                    class="text-dark dark:text-white"
                    data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                    data-astro-source-loc="56:26"
                  >
                    +1 (226)&nbsp;246-7055
                  </div>
                </div>
              </li><li
                class="flex mb-8"
                data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                data-astro-source-loc="47:43"
              >
                <span
                  class="mr-4 TfiEmail h-[50px] xl:h-[70px] min-w-[50px] max-w-[50px] xl:min-w-[70px] xl:max-w-[70px] border border-border text-center leading-[50px] xl:leading-[70px] text-2xl xl:text-2xl text-primary inline-block rounded-full border-solid"
                  data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                  data-astro-source-loc="51:247"
                >
                  <span
                    class="sr-only"
                    data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                    data-astro-source-loc="52:26">mail</span
                  >
                  <svg
                    stroke="currentColor"
                    fill="currentColor"
                    stroke-width="0"
                    version="1.1"
                    viewBox="0 0 17 17"
                    class="inline-block"
                    height="1em"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                    ><g></g><path
                      d="M0 2v13h17v-13h-17zM8.494 9.817l-6.896-6.817h13.82l-6.924 6.817zM5.755 8.516l-4.755 4.682v-9.383l4.755 4.701zM6.466 9.219l2.026 2.003 1.996-1.966 4.8 4.744h-13.677l4.855-4.781zM11.201 8.555l4.799-4.725v9.467l-4.799-4.742z"
                    ></path></svg
                  >
                </span>
                <div
                  class="self-center font-primary"
                  data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                  data-astro-source-loc="55:61"
                >
                  <div
                    class="text-dark dark:text-white"
                    data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                    data-astro-source-loc="56:26"
                  >
                    <a href="mailto:admin@devoptek.ai">admin@devoptek.ai</a>
                  </div>
                </div>
              </li><li
                class="flex mb-8"
                data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                data-astro-source-loc="47:43"
              >
                <span
                  class="mr-4 TfiMapAlt h-[50px] xl:h-[70px] min-w-[50px] max-w-[50px] xl:min-w-[70px] xl:max-w-[70px] border border-border text-center leading-[50px] xl:leading-[70px] text-2xl xl:text-2xl text-primary inline-block rounded-full border-solid"
                  data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                  data-astro-source-loc="51:247"
                >
                  <span
                    class="sr-only"
                    data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                    data-astro-source-loc="52:26">location</span
                  >
                  <svg
                    stroke="currentColor"
                    fill="currentColor"
                    stroke-width="0"
                    version="1.1"
                    viewBox="0 0 17 17"
                    class="inline-block"
                    height="1em"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                    ><g></g><path
                      d="M15 4v0.069l-0.013-0.058-1.015 0.221c-0.139-1.803-1.634-3.232-3.472-3.232-1.841 0-3.339 1.435-3.474 3.242l-1.026-0.223v-0.019h-6v11h5.348l5.196 1.479 5.456-1.605v-10.874h-1zM10.5 2c1.379 0 2.5 1.122 2.5 2.5 0 1.806-1.719 4.209-2.5 5.207-0.781-0.998-2.5-3.401-2.5-5.207 0-1.378 1.121-2.5 2.5-2.5zM6 5.042l1.081 0.235c0.412 2.269 2.406 4.788 2.919 5.406v4.602l-4-1.139v-9.104zM1 5h4v9.017l-4-0.017v-9zM11 15.303v-4.621c0.514-0.619 2.513-3.145 2.921-5.416l1.079-0.234v9.094l-4 1.177zM11.858 4.583c0-0.749-0.609-1.358-1.358-1.358s-1.358 0.609-1.358 1.358 0.609 1.359 1.358 1.359 1.358-0.609 1.358-1.359zM10.142 4.583c0-0.198 0.161-0.358 0.358-0.358s0.358 0.161 0.358 0.358-0.161 0.359-0.358 0.359-0.358-0.161-0.358-0.359z"
                    ></path></svg
                  >
                </span>
                <div
                  class="self-center font-primary"
                  data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                  data-astro-source-loc="55:61"
                >
                  <div
                    class="text-dark dark:text-white"
                    data-astro-source-file="E:/react-projects/devoptekai/src/pages/contact.astro"
                    data-astro-source-loc="56:26"
                  >
                    67, Zieman Crescent, Cambridge, ON
                  </div>
                </div>
              </li>
            </ul>
          </div>
          <div class="lg:col-7 md:col-7">
            <div class="p-5 md:p-10 rounded shadow">
              <form method="post" action={contact_form_action} class="row g-3">
                <div class="lg:col-6">
                  <input
                    type="text"
                    name="name"
                    id="name"
                    class="form-input"
                    placeholder="Name"
                    required
                  />
                </div>
                <div class="lg:col-6">
                  <input
                    type="email"
                    class="form-input"
                    name="email"
                    id="email"
                    placeholder="Email Address"
                    required
                  />
                </div>
                <div class="lg:col-6 flex items-start">
                  <input
                    type="tel"
                    class="form-input"
                    name="phone"
                    id="phone"
                    placeholder="Phone No"
                    required
                  />
                </div>
                <div class="lg:col-6">
                  <input
                    type="text"
                    name="company-name"
                    id="company-name"
                    class="form-input"
                    placeholder="Company Name"
                    required
                  />
                </div>

                <div class="lg:col-12">
                  <textarea
                    class="form-input"
                    name="message"
                    id="message"
                    placeholder="Your Message Here..."
                    required
                    style="height: 150px;"></textarea>
                </div>
                <div class="lg:col-12">
                  <button class="btn btn-primary" type="submit">Submit</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>
  </section>
</Base>
